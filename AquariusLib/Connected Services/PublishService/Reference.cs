//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AquariusLib.PublishService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingCurveFilter", Namespace="http://schemas.datacontract.org/2004/07/AquariusDataService.Dto")]
    [System.SerializableAttribute()]
    internal partial class RatingCurveFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ChangedSinceField;
        
        private string LocationIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string ChangedSince {
            get {
                return this.ChangedSinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedSinceField, value) != true)) {
                    this.ChangedSinceField = value;
                    this.RaisePropertyChanged("ChangedSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string LocationIdentifier {
            get {
                return this.LocationIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdentifierField, value) != true)) {
                    this.LocationIdentifierField = value;
                    this.RaisePropertyChanged("LocationIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublishService.IAquariusPublishService")]
    internal interface IAquariusPublishService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/GetAuthToken", ReplyAction="http://tempuri.org/IAQAuthSession/GetAuthTokenResponse")]
        string GetAuthToken(string user, string encodedPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/GetAuthToken", ReplyAction="http://tempuri.org/IAQAuthSession/GetAuthTokenResponse")]
        System.Threading.Tasks.Task<string> GetAuthTokenAsync(string user, string encodedPassword);
        
        // CODEGEN: Generating message contract since message IsConnectionValidRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/IsConnectionValid", ReplyAction="http://tempuri.org/IAQAuthSession/IsConnectionValidResponse")]
        AquariusLib.PublishService.IsConnectionValidResponse IsConnectionValid(AquariusLib.PublishService.IsConnectionValidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/IsConnectionValid", ReplyAction="http://tempuri.org/IAQAuthSession/IsConnectionValidResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.IsConnectionValidResponse> IsConnectionValidAsync(AquariusLib.PublishService.IsConnectionValidRequest request);
        
        // CODEGEN: Generating message contract since message KeepConnectionAliveRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/KeepConnectionAlive", ReplyAction="http://tempuri.org/IAQAuthSession/KeepConnectionAliveResponse")]
        AquariusLib.PublishService.KeepConnectionAliveResponse KeepConnectionAlive(AquariusLib.PublishService.KeepConnectionAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAQAuthSession/KeepConnectionAlive", ReplyAction="http://tempuri.org/IAQAuthSession/KeepConnectionAliveResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.KeepConnectionAliveResponse> KeepConnectionAliveAsync(AquariusLib.PublishService.KeepConnectionAliveRequest request);
        
        // CODEGEN: Generating message contract since message GetParameterListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetParameterList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetParameterListResponse")]
        AquariusLib.PublishService.GetParameterListResponse GetParameterList(AquariusLib.PublishService.GetParameterListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetParameterList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetParameterListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetParameterListResponse> GetParameterListAsync(AquariusLib.PublishService.GetParameterListRequest request);
        
        // CODEGEN: Generating message contract since message GetFlagListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetFlagList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetFlagListResponse")]
        AquariusLib.PublishService.GetFlagListResponse GetFlagList(AquariusLib.PublishService.GetFlagListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetFlagList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetFlagListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetFlagListResponse> GetFlagListAsync(AquariusLib.PublishService.GetFlagListRequest request);
        
        // CODEGEN: Generating message contract since message GetGradeListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetGradeList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetGradeListResponse")]
        AquariusLib.PublishService.GetGradeListResponse GetGradeList(AquariusLib.PublishService.GetGradeListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetGradeList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetGradeListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetGradeListResponse> GetGradeListAsync(AquariusLib.PublishService.GetGradeListRequest request);
        
        // CODEGEN: Generating message contract since message GetApprovalListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetApprovalList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetApprovalListResponse")]
        AquariusLib.PublishService.GetApprovalListResponse GetApprovalList(AquariusLib.PublishService.GetApprovalListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetApprovalList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetApprovalListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetApprovalListResponse> GetApprovalListAsync(AquariusLib.PublishService.GetApprovalListRequest request);
        
        // CODEGEN: Generating message contract since message GetPublishViewListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetPublishViewList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetPublishViewListResponse")]
        AquariusLib.PublishService.GetPublishViewListResponse GetPublishViewList(AquariusLib.PublishService.GetPublishViewListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetPublishViewList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetPublishViewListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetPublishViewListResponse> GetPublishViewListAsync(AquariusLib.PublishService.GetPublishViewListRequest request);
        
        // CODEGEN: Generating message contract since message GetDataSetsListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetDataSetsList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetDataSetsListResponse")]
        AquariusLib.PublishService.GetDataSetsListResponse GetDataSetsList(AquariusLib.PublishService.GetDataSetsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetDataSetsList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetDataSetsListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetDataSetsListResponse> GetDataSetsListAsync(AquariusLib.PublishService.GetDataSetsListRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSeriesDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResponse")]
        AquariusLib.PublishService.GetTimeSeriesDataResponse GetTimeSeriesData(AquariusLib.PublishService.GetTimeSeriesDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResponse> GetTimeSeriesDataAsync(AquariusLib.PublishService.GetTimeSeriesDataRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSeriesRawDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesRawData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesRawDataResponse")]
        AquariusLib.PublishService.GetTimeSeriesRawDataResponse GetTimeSeriesRawData(AquariusLib.PublishService.GetTimeSeriesRawDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesRawData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesRawDataResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesRawDataResponse> GetTimeSeriesRawDataAsync(AquariusLib.PublishService.GetTimeSeriesRawDataRequest request);
        
        // CODEGEN: Generating message contract since message GetTimeSeriesDataResampledRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResampled", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResampledResponse")]
        AquariusLib.PublishService.GetTimeSeriesDataResampledResponse GetTimeSeriesDataResampled(AquariusLib.PublishService.GetTimeSeriesDataResampledRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResampled", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTimeSeriesDataResampledResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResampledResponse> GetTimeSeriesDataResampledAsync(AquariusLib.PublishService.GetTimeSeriesDataResampledRequest request);
        
        // CODEGEN: Generating message contract since message GetRatingCurveListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingCurveList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingCurveListResponse")]
        AquariusLib.PublishService.GetRatingCurveListResponse GetRatingCurveList(AquariusLib.PublishService.GetRatingCurveListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingCurveList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingCurveListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingCurveListResponse> GetRatingCurveListAsync(AquariusLib.PublishService.GetRatingCurveListRequest request);
        
        // CODEGEN: Generating message contract since message GetRatingTableAsCsvByIdentifierRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTableAsCsvByIdentifier", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableAsCsvByIdentifierRespons" +
            "e")]
        AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse GetRatingTableAsCsvByIdentifier(AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTableAsCsvByIdentifier", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableAsCsvByIdentifierRespons" +
            "e")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse> GetRatingTableAsCsvByIdentifierAsync(AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest request);
        
        // CODEGEN: Generating message contract since message GetRatingTableRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTable", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableResponse")]
        AquariusLib.PublishService.GetRatingTableResponse GetRatingTable(AquariusLib.PublishService.GetRatingTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTable", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableResponse> GetRatingTableAsync(AquariusLib.PublishService.GetRatingTableRequest request);
        
        // CODEGEN: Generating message contract since message GetRatingTableExtensionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTableExtension", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableExtensionResponse")]
        AquariusLib.PublishService.GetRatingTableExtensionResponse GetRatingTableExtension(AquariusLib.PublishService.GetRatingTableExtensionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetRatingTableExtension", ReplyAction="http://tempuri.org/IAquariusPublishService/GetRatingTableExtensionResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableExtensionResponse> GetRatingTableExtensionAsync(AquariusLib.PublishService.GetRatingTableExtensionRequest request);
        
        // CODEGEN: Generating message contract since message GetTemplateListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTemplateList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTemplateListResponse")]
        AquariusLib.PublishService.GetTemplateListResponse GetTemplateList(AquariusLib.PublishService.GetTemplateListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetTemplateList", ReplyAction="http://tempuri.org/IAquariusPublishService/GetTemplateListResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTemplateListResponse> GetTemplateListAsync(AquariusLib.PublishService.GetTemplateListRequest request);
        
        // CODEGEN: Generating message contract since message GetReportDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetReportData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetReportDataResponse")]
        AquariusLib.PublishService.GetReportDataResponse GetReportData(AquariusLib.PublishService.GetReportDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetReportData", ReplyAction="http://tempuri.org/IAquariusPublishService/GetReportDataResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetReportDataResponse> GetReportDataAsync(AquariusLib.PublishService.GetReportDataRequest request);
        
        // CODEGEN: Generating message contract since message GetLocationsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetLocations", ReplyAction="http://tempuri.org/IAquariusPublishService/GetLocationsResponse")]
        AquariusLib.PublishService.GetLocationsResponse GetLocations(AquariusLib.PublishService.GetLocationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetLocations", ReplyAction="http://tempuri.org/IAquariusPublishService/GetLocationsResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsResponse> GetLocationsAsync(AquariusLib.PublishService.GetLocationsRequest request);
        
        // CODEGEN: Generating message contract since message GetLocationsByFolderIdRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetLocationsByFolderId", ReplyAction="http://tempuri.org/IAquariusPublishService/GetLocationsByFolderIdResponse")]
        AquariusLib.PublishService.GetLocationsByFolderIdResponse GetLocationsByFolderId(AquariusLib.PublishService.GetLocationsByFolderIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAquariusPublishService/GetLocationsByFolderId", ReplyAction="http://tempuri.org/IAquariusPublishService/GetLocationsByFolderIdResponse")]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsByFolderIdResponse> GetLocationsByFolderIdAsync(AquariusLib.PublishService.GetLocationsByFolderIdRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsConnectionValid", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class IsConnectionValidRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public IsConnectionValidRequest() {
        }
        
        public IsConnectionValidRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsConnectionValidResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class IsConnectionValidResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsConnectionValidResult;
        
        public IsConnectionValidResponse() {
        }
        
        public IsConnectionValidResponse(bool IsConnectionValidResult) {
            this.IsConnectionValidResult = IsConnectionValidResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepConnectionAlive", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeepConnectionAliveRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public KeepConnectionAliveRequest() {
        }
        
        public KeepConnectionAliveRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepConnectionAliveResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeepConnectionAliveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool KeepConnectionAliveResult;
        
        public KeepConnectionAliveResponse() {
        }
        
        public KeepConnectionAliveResponse(bool KeepConnectionAliveResult) {
            this.KeepConnectionAliveResult = KeepConnectionAliveResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetParameterList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetParameterListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetParameterListRequest() {
        }
        
        public GetParameterListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetParameterListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetParameterListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetParameterListResult;
        
        public GetParameterListResponse() {
        }
        
        public GetParameterListResponse(string GetParameterListResult) {
            this.GetParameterListResult = GetParameterListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFlagList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetFlagListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetFlagListRequest() {
        }
        
        public GetFlagListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFlagListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetFlagListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetFlagListResult;
        
        public GetFlagListResponse() {
        }
        
        public GetFlagListResponse(string GetFlagListResult) {
            this.GetFlagListResult = GetFlagListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGradeList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetGradeListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetGradeListRequest() {
        }
        
        public GetGradeListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGradeListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetGradeListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetGradeListResult;
        
        public GetGradeListResponse() {
        }
        
        public GetGradeListResponse(string GetGradeListResult) {
            this.GetGradeListResult = GetGradeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetApprovalListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetApprovalListRequest() {
        }
        
        public GetApprovalListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApprovalListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetApprovalListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetApprovalListResult;
        
        public GetApprovalListResponse() {
        }
        
        public GetApprovalListResponse(string GetApprovalListResult) {
            this.GetApprovalListResult = GetApprovalListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishViewList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetPublishViewListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetPublishViewListRequest() {
        }
        
        public GetPublishViewListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishViewListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetPublishViewListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetPublishViewListResult;
        
        public GetPublishViewListResponse() {
        }
        
        public GetPublishViewListResponse(string GetPublishViewListResult) {
            this.GetPublishViewListResult = GetPublishViewListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSetsList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetDataSetsListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string locationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string changesSinceTime;
        
        public GetDataSetsListRequest() {
        }
        
        public GetDataSetsListRequest(string AQAuthToken, string locationId, string changesSinceTime) {
            this.AQAuthToken = AQAuthToken;
            this.locationId = locationId;
            this.changesSinceTime = changesSinceTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSetsListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetDataSetsListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetDataSetsListResult;
        
        public GetDataSetsListResponse() {
        }
        
        public GetDataSetsListResponse(string GetDataSetsListResult) {
            this.GetDataSetsListResult = GetDataSetsListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string dataId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string publishView;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string queryFromTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string queryToTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string changesSinceTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string asAtTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public bool returnFullCoverage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public bool includeGapMarkers;
        
        public GetTimeSeriesDataRequest() {
        }
        
        public GetTimeSeriesDataRequest(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            this.AQAuthToken = AQAuthToken;
            this.dataId = dataId;
            this.publishView = publishView;
            this.queryFromTime = queryFromTime;
            this.queryToTime = queryToTime;
            this.changesSinceTime = changesSinceTime;
            this.asAtTime = asAtTime;
            this.returnFullCoverage = returnFullCoverage;
            this.includeGapMarkers = includeGapMarkers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetTimeSeriesDataResult;
        
        public GetTimeSeriesDataResponse() {
        }
        
        public GetTimeSeriesDataResponse(string GetTimeSeriesDataResult) {
            this.GetTimeSeriesDataResult = GetTimeSeriesDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesRawData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesRawDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string dataId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string publishView;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string queryFromTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string queryToTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string changesSinceTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string asAtTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public bool returnFullCoverage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public bool includeGapMarkers;
        
        public GetTimeSeriesRawDataRequest() {
        }
        
        public GetTimeSeriesRawDataRequest(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            this.AQAuthToken = AQAuthToken;
            this.dataId = dataId;
            this.publishView = publishView;
            this.queryFromTime = queryFromTime;
            this.queryToTime = queryToTime;
            this.changesSinceTime = changesSinceTime;
            this.asAtTime = asAtTime;
            this.returnFullCoverage = returnFullCoverage;
            this.includeGapMarkers = includeGapMarkers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesRawDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesRawDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetTimeSeriesRawDataResult;
        
        public GetTimeSeriesRawDataResponse() {
        }
        
        public GetTimeSeriesRawDataResponse(string GetTimeSeriesRawDataResult) {
            this.GetTimeSeriesRawDataResult = GetTimeSeriesRawDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesDataResampled", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesDataResampledRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string dataId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string publishView;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string queryFromTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string queryToTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int sampleIntervalInMinutes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string anchorTime;
        
        public GetTimeSeriesDataResampledRequest() {
        }
        
        public GetTimeSeriesDataResampledRequest(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, int sampleIntervalInMinutes, string anchorTime) {
            this.AQAuthToken = AQAuthToken;
            this.dataId = dataId;
            this.publishView = publishView;
            this.queryFromTime = queryFromTime;
            this.queryToTime = queryToTime;
            this.sampleIntervalInMinutes = sampleIntervalInMinutes;
            this.anchorTime = anchorTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeSeriesDataResampledResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTimeSeriesDataResampledResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetTimeSeriesDataResampledResult;
        
        public GetTimeSeriesDataResampledResponse() {
        }
        
        public GetTimeSeriesDataResampledResponse(string GetTimeSeriesDataResampledResult) {
            this.GetTimeSeriesDataResampledResult = GetTimeSeriesDataResampledResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingCurveList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingCurveListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AquariusLib.PublishService.RatingCurveFilter ratingCurveFilter;
        
        public GetRatingCurveListRequest() {
        }
        
        public GetRatingCurveListRequest(string AQAuthToken, AquariusLib.PublishService.RatingCurveFilter ratingCurveFilter) {
            this.AQAuthToken = AQAuthToken;
            this.ratingCurveFilter = ratingCurveFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingCurveListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingCurveListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<string> GetRatingCurveListResult;
        
        public GetRatingCurveListResponse() {
        }
        
        public GetRatingCurveListResponse(System.Collections.Generic.List<string> GetRatingCurveListResult) {
            this.GetRatingCurveListResult = GetRatingCurveListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTableAsCsvByIdentifier", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableAsCsvByIdentifierRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ratingCurveIdentifier;
        
        public GetRatingTableAsCsvByIdentifierRequest() {
        }
        
        public GetRatingTableAsCsvByIdentifierRequest(string AQAuthToken, string ratingCurveIdentifier) {
            this.AQAuthToken = AQAuthToken;
            this.ratingCurveIdentifier = ratingCurveIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTableAsCsvByIdentifierResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableAsCsvByIdentifierResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetRatingTableAsCsvByIdentifierResult;
        
        public GetRatingTableAsCsvByIdentifierResponse() {
        }
        
        public GetRatingTableAsCsvByIdentifierResponse(string GetRatingTableAsCsvByIdentifierResult) {
            this.GetRatingTableAsCsvByIdentifierResult = GetRatingTableAsCsvByIdentifierResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string locationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inputParameter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string outputParameter;
        
        public GetRatingTableRequest() {
        }
        
        public GetRatingTableRequest(string AQAuthToken, string locationId, string inputParameter, string outputParameter) {
            this.AQAuthToken = AQAuthToken;
            this.locationId = locationId;
            this.inputParameter = inputParameter;
            this.outputParameter = outputParameter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetRatingTableResult;
        
        public GetRatingTableResponse() {
        }
        
        public GetRatingTableResponse(string GetRatingTableResult) {
            this.GetRatingTableResult = GetRatingTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTableExtension", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableExtensionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string locationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string inputParameter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string outputParameter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string label;
        
        public GetRatingTableExtensionRequest() {
        }
        
        public GetRatingTableExtensionRequest(string AQAuthToken, string locationId, string inputParameter, string outputParameter, string label) {
            this.AQAuthToken = AQAuthToken;
            this.locationId = locationId;
            this.inputParameter = inputParameter;
            this.outputParameter = outputParameter;
            this.label = label;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRatingTableExtensionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetRatingTableExtensionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetRatingTableExtensionResult;
        
        public GetRatingTableExtensionResponse() {
        }
        
        public GetRatingTableExtensionResponse(string GetRatingTableExtensionResult) {
            this.GetRatingTableExtensionResult = GetRatingTableExtensionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTemplateList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTemplateListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        public GetTemplateListRequest() {
        }
        
        public GetTemplateListRequest(string AQAuthToken) {
            this.AQAuthToken = AQAuthToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTemplateListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetTemplateListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetTemplateListResult;
        
        public GetTemplateListResponse() {
        }
        
        public GetTemplateListResponse(string GetTemplateListResult) {
            this.GetTemplateListResult = GetTemplateListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReportData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetReportDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string dataId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string reportId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int reportType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string outputPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string reportName;
        
        public GetReportDataRequest() {
        }
        
        public GetReportDataRequest(string AQAuthToken, string dataId, string reportId, int reportType, string outputPath, string reportName) {
            this.AQAuthToken = AQAuthToken;
            this.dataId = dataId;
            this.reportId = reportId;
            this.reportType = reportType;
            this.outputPath = outputPath;
            this.reportName = reportName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReportDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetReportDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream GetReportDataResult;
        
        public GetReportDataResponse() {
        }
        
        public GetReportDataResponse(System.IO.Stream GetReportDataResult) {
            this.GetReportDataResult = GetReportDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocations", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetLocationsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string filter;
        
        public GetLocationsRequest() {
        }
        
        public GetLocationsRequest(string AQAuthToken, string filter) {
            this.AQAuthToken = AQAuthToken;
            this.filter = filter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetLocationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetLocationsResult;
        
        public GetLocationsResponse() {
        }
        
        public GetLocationsResponse(string GetLocationsResult) {
            this.GetLocationsResult = GetLocationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsByFolderId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetLocationsByFolderIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="")]
        public string AQAuthToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long folderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string filter;
        
        public GetLocationsByFolderIdRequest() {
        }
        
        public GetLocationsByFolderIdRequest(string AQAuthToken, long folderId, string filter) {
            this.AQAuthToken = AQAuthToken;
            this.folderId = folderId;
            this.filter = filter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsByFolderIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetLocationsByFolderIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetLocationsByFolderIdResult;
        
        public GetLocationsByFolderIdResponse() {
        }
        
        public GetLocationsByFolderIdResponse(string GetLocationsByFolderIdResult) {
            this.GetLocationsByFolderIdResult = GetLocationsByFolderIdResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IAquariusPublishServiceChannel : AquariusLib.PublishService.IAquariusPublishService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class AquariusPublishServiceClient : System.ServiceModel.ClientBase<AquariusLib.PublishService.IAquariusPublishService>, AquariusLib.PublishService.IAquariusPublishService {
        
        public AquariusPublishServiceClient() {
        }
        
        public AquariusPublishServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AquariusPublishServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AquariusPublishServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AquariusPublishServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAuthToken(string user, string encodedPassword) {
            return base.Channel.GetAuthToken(user, encodedPassword);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthTokenAsync(string user, string encodedPassword) {
            return base.Channel.GetAuthTokenAsync(user, encodedPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.IsConnectionValidResponse AquariusLib.PublishService.IAquariusPublishService.IsConnectionValid(AquariusLib.PublishService.IsConnectionValidRequest request) {
            return base.Channel.IsConnectionValid(request);
        }
        
        public bool IsConnectionValid(string AQAuthToken) {
            AquariusLib.PublishService.IsConnectionValidRequest inValue = new AquariusLib.PublishService.IsConnectionValidRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.IsConnectionValidResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).IsConnectionValid(inValue);
            return retVal.IsConnectionValidResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.IsConnectionValidResponse> AquariusLib.PublishService.IAquariusPublishService.IsConnectionValidAsync(AquariusLib.PublishService.IsConnectionValidRequest request) {
            return base.Channel.IsConnectionValidAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.IsConnectionValidResponse> IsConnectionValidAsync(string AQAuthToken) {
            AquariusLib.PublishService.IsConnectionValidRequest inValue = new AquariusLib.PublishService.IsConnectionValidRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).IsConnectionValidAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.KeepConnectionAliveResponse AquariusLib.PublishService.IAquariusPublishService.KeepConnectionAlive(AquariusLib.PublishService.KeepConnectionAliveRequest request) {
            return base.Channel.KeepConnectionAlive(request);
        }
        
        public bool KeepConnectionAlive(string AQAuthToken) {
            AquariusLib.PublishService.KeepConnectionAliveRequest inValue = new AquariusLib.PublishService.KeepConnectionAliveRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.KeepConnectionAliveResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).KeepConnectionAlive(inValue);
            return retVal.KeepConnectionAliveResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.KeepConnectionAliveResponse> AquariusLib.PublishService.IAquariusPublishService.KeepConnectionAliveAsync(AquariusLib.PublishService.KeepConnectionAliveRequest request) {
            return base.Channel.KeepConnectionAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.KeepConnectionAliveResponse> KeepConnectionAliveAsync(string AQAuthToken) {
            AquariusLib.PublishService.KeepConnectionAliveRequest inValue = new AquariusLib.PublishService.KeepConnectionAliveRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).KeepConnectionAliveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetParameterListResponse AquariusLib.PublishService.IAquariusPublishService.GetParameterList(AquariusLib.PublishService.GetParameterListRequest request) {
            return base.Channel.GetParameterList(request);
        }
        
        public string GetParameterList(string AQAuthToken) {
            AquariusLib.PublishService.GetParameterListRequest inValue = new AquariusLib.PublishService.GetParameterListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetParameterListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetParameterList(inValue);
            return retVal.GetParameterListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetParameterListResponse> AquariusLib.PublishService.IAquariusPublishService.GetParameterListAsync(AquariusLib.PublishService.GetParameterListRequest request) {
            return base.Channel.GetParameterListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetParameterListResponse> GetParameterListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetParameterListRequest inValue = new AquariusLib.PublishService.GetParameterListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetParameterListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetFlagListResponse AquariusLib.PublishService.IAquariusPublishService.GetFlagList(AquariusLib.PublishService.GetFlagListRequest request) {
            return base.Channel.GetFlagList(request);
        }
        
        public string GetFlagList(string AQAuthToken) {
            AquariusLib.PublishService.GetFlagListRequest inValue = new AquariusLib.PublishService.GetFlagListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetFlagListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetFlagList(inValue);
            return retVal.GetFlagListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetFlagListResponse> AquariusLib.PublishService.IAquariusPublishService.GetFlagListAsync(AquariusLib.PublishService.GetFlagListRequest request) {
            return base.Channel.GetFlagListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetFlagListResponse> GetFlagListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetFlagListRequest inValue = new AquariusLib.PublishService.GetFlagListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetFlagListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetGradeListResponse AquariusLib.PublishService.IAquariusPublishService.GetGradeList(AquariusLib.PublishService.GetGradeListRequest request) {
            return base.Channel.GetGradeList(request);
        }
        
        public string GetGradeList(string AQAuthToken) {
            AquariusLib.PublishService.GetGradeListRequest inValue = new AquariusLib.PublishService.GetGradeListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetGradeListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetGradeList(inValue);
            return retVal.GetGradeListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetGradeListResponse> AquariusLib.PublishService.IAquariusPublishService.GetGradeListAsync(AquariusLib.PublishService.GetGradeListRequest request) {
            return base.Channel.GetGradeListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetGradeListResponse> GetGradeListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetGradeListRequest inValue = new AquariusLib.PublishService.GetGradeListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetGradeListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetApprovalListResponse AquariusLib.PublishService.IAquariusPublishService.GetApprovalList(AquariusLib.PublishService.GetApprovalListRequest request) {
            return base.Channel.GetApprovalList(request);
        }
        
        public string GetApprovalList(string AQAuthToken) {
            AquariusLib.PublishService.GetApprovalListRequest inValue = new AquariusLib.PublishService.GetApprovalListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetApprovalListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetApprovalList(inValue);
            return retVal.GetApprovalListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetApprovalListResponse> AquariusLib.PublishService.IAquariusPublishService.GetApprovalListAsync(AquariusLib.PublishService.GetApprovalListRequest request) {
            return base.Channel.GetApprovalListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetApprovalListResponse> GetApprovalListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetApprovalListRequest inValue = new AquariusLib.PublishService.GetApprovalListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetApprovalListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetPublishViewListResponse AquariusLib.PublishService.IAquariusPublishService.GetPublishViewList(AquariusLib.PublishService.GetPublishViewListRequest request) {
            return base.Channel.GetPublishViewList(request);
        }
        
        public string GetPublishViewList(string AQAuthToken) {
            AquariusLib.PublishService.GetPublishViewListRequest inValue = new AquariusLib.PublishService.GetPublishViewListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetPublishViewListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetPublishViewList(inValue);
            return retVal.GetPublishViewListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetPublishViewListResponse> AquariusLib.PublishService.IAquariusPublishService.GetPublishViewListAsync(AquariusLib.PublishService.GetPublishViewListRequest request) {
            return base.Channel.GetPublishViewListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetPublishViewListResponse> GetPublishViewListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetPublishViewListRequest inValue = new AquariusLib.PublishService.GetPublishViewListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetPublishViewListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetDataSetsListResponse AquariusLib.PublishService.IAquariusPublishService.GetDataSetsList(AquariusLib.PublishService.GetDataSetsListRequest request) {
            return base.Channel.GetDataSetsList(request);
        }
        
        public string GetDataSetsList(string AQAuthToken, string locationId, string changesSinceTime) {
            AquariusLib.PublishService.GetDataSetsListRequest inValue = new AquariusLib.PublishService.GetDataSetsListRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.changesSinceTime = changesSinceTime;
            AquariusLib.PublishService.GetDataSetsListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetDataSetsList(inValue);
            return retVal.GetDataSetsListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetDataSetsListResponse> AquariusLib.PublishService.IAquariusPublishService.GetDataSetsListAsync(AquariusLib.PublishService.GetDataSetsListRequest request) {
            return base.Channel.GetDataSetsListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetDataSetsListResponse> GetDataSetsListAsync(string AQAuthToken, string locationId, string changesSinceTime) {
            AquariusLib.PublishService.GetDataSetsListRequest inValue = new AquariusLib.PublishService.GetDataSetsListRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.changesSinceTime = changesSinceTime;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetDataSetsListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetTimeSeriesDataResponse AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesData(AquariusLib.PublishService.GetTimeSeriesDataRequest request) {
            return base.Channel.GetTimeSeriesData(request);
        }
        
        public string GetTimeSeriesData(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            AquariusLib.PublishService.GetTimeSeriesDataRequest inValue = new AquariusLib.PublishService.GetTimeSeriesDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.changesSinceTime = changesSinceTime;
            inValue.asAtTime = asAtTime;
            inValue.returnFullCoverage = returnFullCoverage;
            inValue.includeGapMarkers = includeGapMarkers;
            AquariusLib.PublishService.GetTimeSeriesDataResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesData(inValue);
            return retVal.GetTimeSeriesDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResponse> AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesDataAsync(AquariusLib.PublishService.GetTimeSeriesDataRequest request) {
            return base.Channel.GetTimeSeriesDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResponse> GetTimeSeriesDataAsync(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            AquariusLib.PublishService.GetTimeSeriesDataRequest inValue = new AquariusLib.PublishService.GetTimeSeriesDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.changesSinceTime = changesSinceTime;
            inValue.asAtTime = asAtTime;
            inValue.returnFullCoverage = returnFullCoverage;
            inValue.includeGapMarkers = includeGapMarkers;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetTimeSeriesRawDataResponse AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesRawData(AquariusLib.PublishService.GetTimeSeriesRawDataRequest request) {
            return base.Channel.GetTimeSeriesRawData(request);
        }
        
        public string GetTimeSeriesRawData(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            AquariusLib.PublishService.GetTimeSeriesRawDataRequest inValue = new AquariusLib.PublishService.GetTimeSeriesRawDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.changesSinceTime = changesSinceTime;
            inValue.asAtTime = asAtTime;
            inValue.returnFullCoverage = returnFullCoverage;
            inValue.includeGapMarkers = includeGapMarkers;
            AquariusLib.PublishService.GetTimeSeriesRawDataResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesRawData(inValue);
            return retVal.GetTimeSeriesRawDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesRawDataResponse> AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesRawDataAsync(AquariusLib.PublishService.GetTimeSeriesRawDataRequest request) {
            return base.Channel.GetTimeSeriesRawDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesRawDataResponse> GetTimeSeriesRawDataAsync(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, string changesSinceTime, string asAtTime, bool returnFullCoverage, bool includeGapMarkers) {
            AquariusLib.PublishService.GetTimeSeriesRawDataRequest inValue = new AquariusLib.PublishService.GetTimeSeriesRawDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.changesSinceTime = changesSinceTime;
            inValue.asAtTime = asAtTime;
            inValue.returnFullCoverage = returnFullCoverage;
            inValue.includeGapMarkers = includeGapMarkers;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesRawDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetTimeSeriesDataResampledResponse AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesDataResampled(AquariusLib.PublishService.GetTimeSeriesDataResampledRequest request) {
            return base.Channel.GetTimeSeriesDataResampled(request);
        }
        
        public string GetTimeSeriesDataResampled(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, int sampleIntervalInMinutes, string anchorTime) {
            AquariusLib.PublishService.GetTimeSeriesDataResampledRequest inValue = new AquariusLib.PublishService.GetTimeSeriesDataResampledRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.sampleIntervalInMinutes = sampleIntervalInMinutes;
            inValue.anchorTime = anchorTime;
            AquariusLib.PublishService.GetTimeSeriesDataResampledResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesDataResampled(inValue);
            return retVal.GetTimeSeriesDataResampledResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResampledResponse> AquariusLib.PublishService.IAquariusPublishService.GetTimeSeriesDataResampledAsync(AquariusLib.PublishService.GetTimeSeriesDataResampledRequest request) {
            return base.Channel.GetTimeSeriesDataResampledAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetTimeSeriesDataResampledResponse> GetTimeSeriesDataResampledAsync(string AQAuthToken, string dataId, string publishView, string queryFromTime, string queryToTime, int sampleIntervalInMinutes, string anchorTime) {
            AquariusLib.PublishService.GetTimeSeriesDataResampledRequest inValue = new AquariusLib.PublishService.GetTimeSeriesDataResampledRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.publishView = publishView;
            inValue.queryFromTime = queryFromTime;
            inValue.queryToTime = queryToTime;
            inValue.sampleIntervalInMinutes = sampleIntervalInMinutes;
            inValue.anchorTime = anchorTime;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTimeSeriesDataResampledAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetRatingCurveListResponse AquariusLib.PublishService.IAquariusPublishService.GetRatingCurveList(AquariusLib.PublishService.GetRatingCurveListRequest request) {
            return base.Channel.GetRatingCurveList(request);
        }
        
        public System.Collections.Generic.List<string> GetRatingCurveList(string AQAuthToken, AquariusLib.PublishService.RatingCurveFilter ratingCurveFilter) {
            AquariusLib.PublishService.GetRatingCurveListRequest inValue = new AquariusLib.PublishService.GetRatingCurveListRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.ratingCurveFilter = ratingCurveFilter;
            AquariusLib.PublishService.GetRatingCurveListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingCurveList(inValue);
            return retVal.GetRatingCurveListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingCurveListResponse> AquariusLib.PublishService.IAquariusPublishService.GetRatingCurveListAsync(AquariusLib.PublishService.GetRatingCurveListRequest request) {
            return base.Channel.GetRatingCurveListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingCurveListResponse> GetRatingCurveListAsync(string AQAuthToken, AquariusLib.PublishService.RatingCurveFilter ratingCurveFilter) {
            AquariusLib.PublishService.GetRatingCurveListRequest inValue = new AquariusLib.PublishService.GetRatingCurveListRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.ratingCurveFilter = ratingCurveFilter;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingCurveListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse AquariusLib.PublishService.IAquariusPublishService.GetRatingTableAsCsvByIdentifier(AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest request) {
            return base.Channel.GetRatingTableAsCsvByIdentifier(request);
        }
        
        public string GetRatingTableAsCsvByIdentifier(string AQAuthToken, string ratingCurveIdentifier) {
            AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest inValue = new AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.ratingCurveIdentifier = ratingCurveIdentifier;
            AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTableAsCsvByIdentifier(inValue);
            return retVal.GetRatingTableAsCsvByIdentifierResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse> AquariusLib.PublishService.IAquariusPublishService.GetRatingTableAsCsvByIdentifierAsync(AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest request) {
            return base.Channel.GetRatingTableAsCsvByIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierResponse> GetRatingTableAsCsvByIdentifierAsync(string AQAuthToken, string ratingCurveIdentifier) {
            AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest inValue = new AquariusLib.PublishService.GetRatingTableAsCsvByIdentifierRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.ratingCurveIdentifier = ratingCurveIdentifier;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTableAsCsvByIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetRatingTableResponse AquariusLib.PublishService.IAquariusPublishService.GetRatingTable(AquariusLib.PublishService.GetRatingTableRequest request) {
            return base.Channel.GetRatingTable(request);
        }
        
        public string GetRatingTable(string AQAuthToken, string locationId, string inputParameter, string outputParameter) {
            AquariusLib.PublishService.GetRatingTableRequest inValue = new AquariusLib.PublishService.GetRatingTableRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.inputParameter = inputParameter;
            inValue.outputParameter = outputParameter;
            AquariusLib.PublishService.GetRatingTableResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTable(inValue);
            return retVal.GetRatingTableResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableResponse> AquariusLib.PublishService.IAquariusPublishService.GetRatingTableAsync(AquariusLib.PublishService.GetRatingTableRequest request) {
            return base.Channel.GetRatingTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableResponse> GetRatingTableAsync(string AQAuthToken, string locationId, string inputParameter, string outputParameter) {
            AquariusLib.PublishService.GetRatingTableRequest inValue = new AquariusLib.PublishService.GetRatingTableRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.inputParameter = inputParameter;
            inValue.outputParameter = outputParameter;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetRatingTableExtensionResponse AquariusLib.PublishService.IAquariusPublishService.GetRatingTableExtension(AquariusLib.PublishService.GetRatingTableExtensionRequest request) {
            return base.Channel.GetRatingTableExtension(request);
        }
        
        public string GetRatingTableExtension(string AQAuthToken, string locationId, string inputParameter, string outputParameter, string label) {
            AquariusLib.PublishService.GetRatingTableExtensionRequest inValue = new AquariusLib.PublishService.GetRatingTableExtensionRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.inputParameter = inputParameter;
            inValue.outputParameter = outputParameter;
            inValue.label = label;
            AquariusLib.PublishService.GetRatingTableExtensionResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTableExtension(inValue);
            return retVal.GetRatingTableExtensionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableExtensionResponse> AquariusLib.PublishService.IAquariusPublishService.GetRatingTableExtensionAsync(AquariusLib.PublishService.GetRatingTableExtensionRequest request) {
            return base.Channel.GetRatingTableExtensionAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetRatingTableExtensionResponse> GetRatingTableExtensionAsync(string AQAuthToken, string locationId, string inputParameter, string outputParameter, string label) {
            AquariusLib.PublishService.GetRatingTableExtensionRequest inValue = new AquariusLib.PublishService.GetRatingTableExtensionRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.locationId = locationId;
            inValue.inputParameter = inputParameter;
            inValue.outputParameter = outputParameter;
            inValue.label = label;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetRatingTableExtensionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetTemplateListResponse AquariusLib.PublishService.IAquariusPublishService.GetTemplateList(AquariusLib.PublishService.GetTemplateListRequest request) {
            return base.Channel.GetTemplateList(request);
        }
        
        public string GetTemplateList(string AQAuthToken) {
            AquariusLib.PublishService.GetTemplateListRequest inValue = new AquariusLib.PublishService.GetTemplateListRequest();
            inValue.AQAuthToken = AQAuthToken;
            AquariusLib.PublishService.GetTemplateListResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTemplateList(inValue);
            return retVal.GetTemplateListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetTemplateListResponse> AquariusLib.PublishService.IAquariusPublishService.GetTemplateListAsync(AquariusLib.PublishService.GetTemplateListRequest request) {
            return base.Channel.GetTemplateListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetTemplateListResponse> GetTemplateListAsync(string AQAuthToken) {
            AquariusLib.PublishService.GetTemplateListRequest inValue = new AquariusLib.PublishService.GetTemplateListRequest();
            inValue.AQAuthToken = AQAuthToken;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetTemplateListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetReportDataResponse AquariusLib.PublishService.IAquariusPublishService.GetReportData(AquariusLib.PublishService.GetReportDataRequest request) {
            return base.Channel.GetReportData(request);
        }
        
        public System.IO.Stream GetReportData(string AQAuthToken, string dataId, string reportId, int reportType, string outputPath, string reportName) {
            AquariusLib.PublishService.GetReportDataRequest inValue = new AquariusLib.PublishService.GetReportDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.reportId = reportId;
            inValue.reportType = reportType;
            inValue.outputPath = outputPath;
            inValue.reportName = reportName;
            AquariusLib.PublishService.GetReportDataResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetReportData(inValue);
            return retVal.GetReportDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetReportDataResponse> AquariusLib.PublishService.IAquariusPublishService.GetReportDataAsync(AquariusLib.PublishService.GetReportDataRequest request) {
            return base.Channel.GetReportDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetReportDataResponse> GetReportDataAsync(string AQAuthToken, string dataId, string reportId, int reportType, string outputPath, string reportName) {
            AquariusLib.PublishService.GetReportDataRequest inValue = new AquariusLib.PublishService.GetReportDataRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.dataId = dataId;
            inValue.reportId = reportId;
            inValue.reportType = reportType;
            inValue.outputPath = outputPath;
            inValue.reportName = reportName;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetReportDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetLocationsResponse AquariusLib.PublishService.IAquariusPublishService.GetLocations(AquariusLib.PublishService.GetLocationsRequest request) {
            return base.Channel.GetLocations(request);
        }
        
        public string GetLocations(string AQAuthToken, string filter) {
            AquariusLib.PublishService.GetLocationsRequest inValue = new AquariusLib.PublishService.GetLocationsRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.filter = filter;
            AquariusLib.PublishService.GetLocationsResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetLocations(inValue);
            return retVal.GetLocationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsResponse> AquariusLib.PublishService.IAquariusPublishService.GetLocationsAsync(AquariusLib.PublishService.GetLocationsRequest request) {
            return base.Channel.GetLocationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsResponse> GetLocationsAsync(string AQAuthToken, string filter) {
            AquariusLib.PublishService.GetLocationsRequest inValue = new AquariusLib.PublishService.GetLocationsRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.filter = filter;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetLocationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AquariusLib.PublishService.GetLocationsByFolderIdResponse AquariusLib.PublishService.IAquariusPublishService.GetLocationsByFolderId(AquariusLib.PublishService.GetLocationsByFolderIdRequest request) {
            return base.Channel.GetLocationsByFolderId(request);
        }
        
        public string GetLocationsByFolderId(string AQAuthToken, long folderId, string filter) {
            AquariusLib.PublishService.GetLocationsByFolderIdRequest inValue = new AquariusLib.PublishService.GetLocationsByFolderIdRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.folderId = folderId;
            inValue.filter = filter;
            AquariusLib.PublishService.GetLocationsByFolderIdResponse retVal = ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetLocationsByFolderId(inValue);
            return retVal.GetLocationsByFolderIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsByFolderIdResponse> AquariusLib.PublishService.IAquariusPublishService.GetLocationsByFolderIdAsync(AquariusLib.PublishService.GetLocationsByFolderIdRequest request) {
            return base.Channel.GetLocationsByFolderIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<AquariusLib.PublishService.GetLocationsByFolderIdResponse> GetLocationsByFolderIdAsync(string AQAuthToken, long folderId, string filter) {
            AquariusLib.PublishService.GetLocationsByFolderIdRequest inValue = new AquariusLib.PublishService.GetLocationsByFolderIdRequest();
            inValue.AQAuthToken = AQAuthToken;
            inValue.folderId = folderId;
            inValue.filter = filter;
            return ((AquariusLib.PublishService.IAquariusPublishService)(this)).GetLocationsByFolderIdAsync(inValue);
        }
    }
}
